/*
 * I2C.c
 *
 *  Created on: Aug 21, 2023
 *      Author: ARAFA
 */

#include"STM32F103x8.h"
#include"I2C.h"
#include"RCC.h"

//A Copy to be used in whole program
I2C_Config_t Gp_I2C_Config[2] = {NULL,NULL};

#define I2C1_INDEX		0
#define I2C2_INDEX		1

/********************************************************************************************************************************
 *->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> I2C API'S  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 *********************************************************************************************************************************/



/**================================================================
 * @Fn					- MCAL_I2C_Init
 * @brief 				- Initializes I2C according to the specified parameters
 * @param [in] 			- I2Cx: where x can be (1 or 2) depending on the device used
 * @param [in] 			- I2C_Config: All the I2C configurations
 * @retval 				- None
 * Note					- Supports Master in polling mechanism & slave interrupt Mechanism
 *
 */

void MCAL_I2C_Init(I2C_typedef* I2Cx, I2C_Config_t * I2C_Config){

	uint16_t tempreg = 0;
	uint16_t freqrange = 0;
	uint32_t pclk1 = 8000000;


	//Enable RCC Clock
	if(I2Cx == I2C1){
		Gp_I2C_Config[I2C1_INDEX] = *I2C_Config;
		RCC_I2C1_CLK_Enable();

	}else{
		Gp_I2C_Config[I2C2_INDEX] = *I2C_Config;
		RCC_I2C2_CLK_Enable();

	}


	//MODE
	if(I2C_Config->I2C_SM_Bus_Mode == I2C_I2C_Mode){

		/****************INIT TIME*************/
		//I2C_CR2 Bits 5:0 FREQ[5:0]: Peripheral clock frequency from APB1

		//copy content of CR2
		tempreg = I2Cx->CR2;

		//clear freq[5:0];
		tempreg &= ~(I2C_CR2_FREQ);

		//get pclk1 freq




	}else{
		//I2C_SMBus_Mode Not supported
	}









}
void MCAL_I2C_DeInit(I2C_typedef* I2Cx);
void MCAL_I2C_Set_GPIO_PINS(I2C_typedef* I2Cx);



