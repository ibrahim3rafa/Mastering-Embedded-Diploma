/*
 * RCC.h
 *
 *  Created on: Aug 14, 2023
 *      Author: ARAFA
 */

#ifndef INCLUDES_RCC_H_
#define INCLUDES_RCC_H_

#include"STM32F103x6.h"

// Baud rate Calculations
// USARTDIV = fclck / (16* Baudrate)
// Calculate USARTDIV_MUL100 to deal with the fraction as integer part
// USARTDIV_MUL100 = (100*fclk)/(16*Baudrate) = (25*fclck)/(4*Baudrate)
// DIV_Mantissa = Integer part (USARTDIV)
// DIV_Mantissa_MUL100 = Integer part (USARTDIV) * 100
// DIV_Fraction = ((USARTDIV_MUL100 - DIV_Mantissa_MUL100) * 16)/100


#define USARTDIV(_PCLK_,_BAUD_)				(uint32_t)(_PCLK_/(16 * _BAUD_))
#define USARTDIV_MUL100(_PCLK_,_BAUD_)		(uint32_t)((25 * _PCLK_)/(4 * _BAUD_))
#define Matissa(_PCLK_,_BAUD_)				(uint32_t)(USARTDIV(_PCLK_,_BAUD_))
#define Mantissa_MUL100(_PCLK_,_BAUD_)		(uint32_t)(USARTDIV(_PCLK_,_BAUD_)*100)
#define DIV_Fraction(_PCLK_,_BAUD_)			(uint32_t)((USARTDIV_MUL100(_PCLK_,_BAUD_) - Mantissa_MUL100(_PCLK_,_BAUD_)) * 16) / 100
#define UART_BRR_Register(_PCLK_,_BAUD_)	((Matissa(_PCLK_,_BAUD_)) << 4) | ((DIV_Fraction(_PCLK_,_BAUD_)) & 0xF)


/*This Partial implementation of RCC driver just to could implement USART driver
 * We assumed here that we will take our clock from internal 8M HSI only */










#define HSE_Clock 										(uint32_t)16000000
#define HSI_RC_Clock 									(uint32_t)8000000


uint32_t MCAL_RCC_GetSYS_CLCKFreq(void);
uint32_t MCAL_RCC_GetHCLK_CLCKFreq(void);
uint32_t MCAL_RCC_GetPCLK1_CLCKFreq(void);
uint32_t MCAL_RCC_GetPCLK2_CLCKFreq(void);



#endif /* INCLUDES_RCC_H_ */
