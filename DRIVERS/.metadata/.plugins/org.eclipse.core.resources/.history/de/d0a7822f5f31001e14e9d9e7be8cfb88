/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


#include "../STM32F103C6_drivers/inc/STM32F103C6_gpio_driver.h"
#include"../STM32F103C6_drivers/inc/STM32F103x6.h"
#include"lcd.h"
#include "keypad.h"



void clock_init(void){
	//	Bit 2 IOPAEN: IO port A clock enable
	//	Set and cleared by software.
	//	0: IO port A clock disabled
	//	1: IO port A clock enabled

	RCC_GPIOA_CLK_EN();


	//	Bit 3 IOPBEN: IO port B clock enable
	//	Set and cleared by software.
	//	0: IO port B clock disabled
	//	1: IO port B clock enabled
	RCC_GPIOB_CLK_EN();

}


int main(void)
{
	clock_init();
	LCD_init();
	KEYPAD_init();
	wait_ms(500);
	LCD_displayString("AYA");
	wait_ms(500);
	unsigned char key_pressed;
	while(1){
		key_pressed = KEYPAD_getKey();
				switch(key_pressed){
					case 'A':
						break;
					case '?':
						LCD_clearScreen();
						break;
					default:
						LCD_sendCommand(key_pressed);
						break;
				}
	}
}
